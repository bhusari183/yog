<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-KLHT85UI" ignored="0" name="Default test" tests="5" failures="0" timestamp="06 May 2022 17:51:47 GMT" time="1.019" errors="0">
  <testcase name="@BeforeSuite openBrowser" time="0.108" classname="Test.Login">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: D:\TESTING REQUIRED APPS JARS\Chrome 98 drivers\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\TESTING REQUIRED APPS JARS\Chrome 98 drivers\chromedriver.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at Test.Login.openBrowser(Login.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:401)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite openBrowser -->
  <testcase name="@BeforeTest enterUrl" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeTest enterUrl -->
  <testcase name="@BeforeClass TimemaxWindow" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeClass TimemaxWindow -->
  <testcase name="@BeforeMethod ScreenshotCookie" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeMethod ScreenshotCookie -->
  <testcase name="@AfterMethod Screenshot" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterMethod Screenshot -->
  <testcase name="@BeforeMethod ScreenshotCookie" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeMethod ScreenshotCookie -->
  <testcase name="@AfterMethod Screenshot" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterMethod Screenshot -->
  <testcase name="@BeforeMethod ScreenshotCookie" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeMethod ScreenshotCookie -->
  <testcase name="@AfterMethod Screenshot" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterMethod Screenshot -->
  <testcase name="@BeforeMethod ScreenshotCookie" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeMethod ScreenshotCookie -->
  <testcase name="@AfterMethod Screenshot" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterMethod Screenshot -->
  <testcase name="@BeforeMethod ScreenshotCookie" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @BeforeMethod ScreenshotCookie -->
  <testcase name="@AfterMethod Screenshot" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterMethod Screenshot -->
  <testcase name="@AfterClass cookieDelet" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterClass cookieDelet -->
  <testcase name="@AfterTest dbConnection" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- @AfterTest dbConnection -->
  <testcase name="Register" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- Register -->
  <testcase name="Register" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- Register -->
  <testcase name="Register" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- Register -->
  <testcase name="Register" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- Register -->
  <testcase name="Register" time="0.0" classname="Test.Login">
    <skipped/>
  </testcase> <!-- Register -->
</testsuite> <!-- Default test -->
